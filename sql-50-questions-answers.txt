/1-) Write an SQL query to list employees whose salary is between 4000 and 5000/

SELECT * FROM EMPLOYEES 
WHERE SALARY>=4000 AND SALARY<=5000;

/2-) Write an SQL query to list the first name, last name, and salary of employees whose Job ID is `IT_PROG`/

SELECT FIRST_NAME, LAST_NAME, SALARY FROM EMPLOYEES
WHERE JOB_ID = 'IT_PROG';

/3-) Write an SQL query to list the first name, last name, and salary of employees whose Manager ID is 114/

SELECT FIRST_NAME, LAST_NAME, SALARY FROM EMPLOYEES
WHERE MANAGER_ID = 114;

/4-) Write an SQL query to list the first name, last name, salary, and hire date of employees whose hire date is later than 2006/

SELECT FIRST_NAME, LAST_NAME, SALARY, HIRE_DATE FROM EMPLOYEES
WHERE to_char(HIRE_DATE,'yyyy')>2006

/5-) Write an SQL query to list the first name, last name, department ID, and salary of employees whose department ID is 80 or 100/

SELECT FIRST_NAME, LAST_NAME, DEPARTMENT_ID, SALARY FROM EMPLOYEES
WHERE DEPARTMENT_ID = 80 OR DEPARTMENT_ID = 100;

/6-) Write an SQL query to list the first name, last name, salary, and department ID of employees 
     who are not assigned to any manager/

SELECT FIRST_NAME, LAST_NAME, SALARY, DEPARTMENT_ID FROM EMPLOYEES
WHERE MANAGER_ID IS NULL;

/7-) Write an SQL query to list the first name, last name, salary, and department ID of employees 
     whose second letter of the first name is "d" and whose last name is 5 characters long/

SELECT FIRST_NAME, LAST_NAME, SALARY, DEPARTMENT_ID FROM EMPLOYEES
WHERE FIRST_NAME LIKE ‘_d%’ AND LAST_NAME LIKE ‘_____’;

/8-) Write an SQL query to list the first and last names of employees (in a single column), 
     along with their department ID and salary, for employees whose department ID is greater than 15/

SELECT FIRST_NAME ||' '|| LAST_NAME AS FULL_NAME ,DEPARTMENT_ID, SALARY FROM EMPLOYEES
WHERE DEPARTMENT_ID > 15;

/9-) Write an SQL query to list the old and new salaries of employees  
     who have worked more than 5 years, giving them a raise of 1000 units/

SELECT FIRST_NAME, LAST_NAME, SALARY AS OLD_SALARY, SALARY+1000 AS NEW_SALARY FROM EMPLOYEES
WHERE to_char(sysdate,'yyyy')-to_char(HIRE_DATE,'yyyy')>5;

/10-) Write an SQL query to list the first name, last name, salary, and 
      hire date of all employees, sorted by salary from highest to lowest/

SELECT FIRST_NAME, LAST_NAME, SALARY, HIRE_DATE FROM EMPLOYEES
ORDER BY SALARY DESC;

/11-) Write an SQL query to list each employee’s first name, last name, salary, and the department they work in/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, D.DEPARTMENT_NAME FROM EMPLOYEES E,DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;

/12-) Write an SQL query to list the name of each department along with the name and salary of its manager/

SELECT D.DEPARTMENT_NAME, E.FIRST_NAME, E.LAST_NAME, E.SALARY FROM EMPLOYEES E, DEPARTMENTS D
WHERE D.MANAGER_ID = E.EMPLOYEE_ID;

/13-) Write an SQL query to list each employee’s first name, last name, salary, and job title/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, J.JOB_TITLE FROM EMPLOYEES E, JOBS J
WHERE E.JOB_ID = J.JOB_ID;

/14-) Write an SQL query to list the first name, last name, and salary of employees working in the Sales department/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, D.DEPARTMENT_NAME FROM EMPLOYEES E, DEPARTMENTS D
WHERE D.DEPARTMENT_NAME = 'Sales'
AND E.DEPARTMENT_ID = D.DEPARTMENT_ID;

/15-) Write an SQL query to list the first name, last name, salary, and hire date of employees 
      who have been working in the Shipping department for at least 3 years/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, E.HIRE_DATE, D.DEPARTMENT_NAME FROM EMPLOYEES E, DEPARTMENTS D
WHERE to_char(sysdate,'yyyy')-to_char(HIRE_DATE,'yyyy')>3
AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND D.DEPARTMENT_NAME = 'Shipping';

/16-) Write an SQL query to list the cities that belong to the country with the name "United States of America"/

SELECT C.COUNTRY_NAME, L.CITY FROM COUNTRIES C, LOCATIONS L
WHERE C.COUNTRY_ID = L.COUNTRY_ID 
AND C.COUNTRY_NAME = 'United States of America';

/17-) Write an SQL query to list the first name, last name, salary, and job title of employees who work with the "Programmer" title/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, J.JOB_TITLE FROM EMPLOYEES E, JOBS J
WHERE J.JOB_TITLE = 'Programmer'
AND E.JOB_ID = J.JOB_ID;

/17.Solution to the problem with join statement/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, J.JOB_TITLE 
FROM EMPLOYEES E JOIN JOBS J
ON E.JOB_ID = J.JOB_ID
AND J.JOB_TITLE = 'Programmer';

/18-) Write an SQL query to list each employee's first name, last name, salary, and 
      the first and last name of their respective department manager/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, EP.FIRST_NAME AS MANAGER_NAME, EP.LAST_NAME AS MANAGER_LASTNAME
FROM EMPLOYEES E, EMPLOYEES EP
WHERE E.MANAGER_ID = EP.MANAGER_ID;

/18.Solution to the problem with join statement/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, EP.FIRST_NAME AS MANAGER_NAME, EP.LAST_NAME AS MANAGER_LASTNAME
FROM EMPLOYEES E JOIN EMPLOYEES EP
ON E.MANAGER_ID = EP.MANAGER_ID;

/19-) Write an SQL query to list the first name, last name, salary, and hire date of employees 
      who have been working in the Marketing department for more than 15 years/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, E.HIRE_DATE, D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D
WHERE to_char(sysdate,'yyyy')-to_char(E.HIRE_DATE,'yyyy')>15
AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND D.DEPARTMENT_NAME = 'Marketing';

/19.Solution to the problem with join statement/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, E.HIRE_DATE, D.DEPARTMENT_NAME
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND to_char(sysdate,'yyyy')-to_char(E.HIRE_DATE,'yyyy')>15
AND D.DEPARTMENT_NAME = 'Marketing';

/20-) Write an SQL query to list the first name, last name, salary, and hire date of employees working in the Finance department/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, E.HIRE_DATE, D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D
WHERE D.DEPARTMENT_NAME = 'Finance'
AND E.DEPARTMENT_ID = D.DEPARTMENT_ID;

/20.Solution to the problem with join statement/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, E.HIRE_DATE, D.DEPARTMENT_NAME
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND D.DEPARTMENT_NAME = 'Finance';

/21-) Write an SQL query to list the first name, last name, salary, hire date, and 
      department name of employees with the job title Finance Manager/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, E.HIRE_DATE, D.DEPARTMENT_NAME, J.JOB_TITLE
FROM EMPLOYEES E, DEPARTMENTS D, JOBS J
WHERE J.JOB_TITLE = 'Finance Manager'
AND E.JOB_ID = J.JOB_ID 
AND E.DEPARTMENT_ID = D.DEPARTMENT_ID;

/21.Solution to the problem with join statement/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, E.HIRE_DATE, D.DEPARTMENT_NAME, J.JOB_TITLE
FROM EMPLOYEES E JOIN DEPARTMENTS D 
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN JOBS J ON E.JOB_ID = J.JOB_ID
AND J.JOB_TITLE = 'Finance Manager';

/22-) Write an SQL query to list the first name, last name, salary, city, and commission_pct of employees 
      working as Programmer who do not have a Commission_pct value/

Select E.FIRST_NAME, E.LAST_NAME, E.SALARY, E.COMMISSION_PCT, L.CITY, J.JOB_TITLE
FROM EMPLOYEES E,DEPARTMENTS D,LOCATIONS L, JOBS J
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND D.LOCATION_ID = L.LOCATION_ID
AND E.JOB_ID = J.JOB_ID
AND E.COMMISSION_PCT IS NULL 
AND J.JOB_TITLE='Programmer'

/22.Solution to the problem with join statement/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, E.COMMISSION_PCT, L.CITY, J.JOB_TITLE
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
JOIN JOBS J ON E.JOB_ID = J.JOB_ID
AND E.COMMISSION_PCT IS NULL
AND J.JOB_TITLE = 'PROGRAMMER';

23-) Write an SQL query to list the ID and name of departments where the manager_id is NULL/

SELECT D.MANAGER_ID, D.DEPARTMENT_NAME, D.DEPARTMENT_ID    
FROM DEPARTMENTS D    
WHERE D.MANAGER_ID IS NULL;

24-) Write an SQL query to list the first and last names of employees 
     who have the same first name but different last names in a single column/

SELECT E.FIRST_NAME|| ' ' ||E.LAST_NAME|| ' ' ||B.FIRST_NAME|| ' ' ||B.LAST_NAME 
    as SAME_NAME_DIFFERENT_LASTNAME
FROM EMPLOYEES E, EMPLOYEES B  
WHERE E.FIRST_NAME = B.FIRST_NAME  
AND E.LAST_NAME <> B.LAST_NAME;

25-) Write an SQL query to list how many employees work in each job group/

SELECT E.JOB_ID, COUNT(E.EMPLOYEE_ID)     
FROM EMPLOYEES E    
GROUP BY E.JOB_ID;

26-) Write an SQL query to list each job title and the number of employees working in it/

SELECT J.JOB_TITLE, COUNT(E.EMPLOYEE_ID)     
FROM EMPLOYEES E    
JOIN JOBS J ON E.JOB_ID = J.JOB_ID    
GROUP BY J.JOB_TITLE;

27-) Write an SQL query to list each department's name and the number of employees working in that department/

SELECT D.DEPARTMENT_NAME, COUNT(E.EMPLOYEE_ID)    
FROM DEPARTMENTS D, EMPLOYEES E    
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID    
GROUP BY D.DEPARTMENT_NAME;

28-) Write an SQL query to list each city’s name and the number of departments in that city/

SELECT L.CITY, COUNT(D.DEPARTMENT_ID) AS NUMBER_OF_DEPARTMENTS  
FROM DEPARTMENTS D, LOCATIONS L  
WHERE D.LOCATION_ID = L.LOCATION_ID  
GROUP BY L.CITY;

29-) Write an SQL query to list each country’s name and the number of cities in that country/

SELECT C.COUNTRY_NAME, COUNT(L.CITY) AS NUMBER_OF_CITIES  
FROM COUNTRIES C, LOCATIONS L  
WHERE C.COUNTRY_ID = L.COUNTRY_ID  
GROUP BY C.COUNTRY_NAME;

30-) Write an SQL query to list the first name, last name, salary, and department name of the employee who earns the lowest salary/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, D.DEPARTMENT_NAME
FROM EMPLOYEES E JOIN DEPARTMENTS D 
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE E.SALARY = (SELECT MIN(SALARY) FROM EMPLOYEES);

/30.Solution to the problem with join statement/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D 
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND E.SALARY = (SELECT MIN(SALARY) FROM EMPLOYEES);

/31-) Write an SQL query to list the first name, last name, salary, and department name 
      of the employee with the lowest salary in each department/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, D.DEPARTMENT_NAME    
FROM EMPLOYEES E, DEPARTMENTS D    
WHERE (D.DEPARTMENT_ID, E.SALARY) = ANY (    
        SELECT E.DEPARTMENT_ID, MIN(SALARY)    
        FROM EMPLOYEES E    
        GROUP BY E.DEPARTMENT_ID    
);

/32-) Write an SQL query to list how many employees in each department have a salary between 3000 and 5000/

SELECT D.DEPARTMENT_NAME, COUNT(E.EMPLOYEE_ID)    
FROM DEPARTMENTS D, EMPLOYEES E    
WHERE D.DEPARTMENT_ID = E.DEPARTMENT_ID    
AND E.SALARY BETWEEN 3000 AND 5000    
GROUP BY D.DEPARTMENT_NAME;

/33-) Write an SQL query to list the job groups that have at least 10 employees/

SELECT J.JOB_TITLE, COUNT(E.EMPLOYEE_ID)    
FROM EMPLOYEES E, JOBS J    
WHERE E.JOB_ID = J.JOB_ID    
GROUP BY J.JOB_TITLE    
HAVING COUNT(J.JOB_ID) >= 10;

/34-) Write an SQL query to list the average salary of each department/

SELECT D.DEPARTMENT_NAME, ROUND(AVG(E.SALARY), 3) AS AVERAGE_SALARY  
FROM EMPLOYEES E, DEPARTMENTS D  
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID  
GROUP BY D.DEPARTMENT_NAME;

/35-) Write an SQL query to list the name, surname, and salary of employees in department 30 
      who earn less than the average salary of that department/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY    
FROM EMPLOYEES E, DEPARTMENTS D    
WHERE D.DEPARTMENT_ID = E.DEPARTMENT_ID    
AND E.DEPARTMENT_ID = 30    
AND E.SALARY <= (SELECT AVG(E.SALARY) FROM EMPLOYEES E);

/36-) Write an SQL query to list the name, surname, and hire date of the employee who was hired first in the company/

SELECT E.FIRST_NAME, E.LAST_NAME, E.HIRE_DATE    
FROM EMPLOYEES E    
WHERE E.HIRE_DATE = (SELECT MIN(E.HIRE_DATE) FROM EMPLOYEES E);

/37-) Write an SQL query to list the name, surname, and salary of employees who earn more than the average salary/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY    
FROM EMPLOYEES E    
GROUP BY E.FIRST_NAME, E.LAST_NAME, E.SALARY    
HAVING E.SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES);

/38-) Write an SQL query to list the name, surname, salary, and job title of the employee with the highest salary/

SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, J.JOB_TITLE    
FROM EMPLOYEES E, JOBS J    
WHERE E.JOB_ID = J.JOB_ID    
AND E.SALARY = (SELECT MAX(SALARY) FROM EMPLOYEES);

/39-) Write an SQL query to list the job title that has the highest number of employees, along with the number of employees/

SELECT J.JOB_TITLE, COUNT(E.EMPLOYEE_ID)    
FROM JOBS J, EMPLOYEES E    
WHERE E.JOB_ID = J.JOB_ID    
GROUP BY E.JOB_ID, J.JOB_TITLE    
HAVING COUNT(E.EMPLOYEE_ID) = (    
        SELECT MAX(COUNT(*))    
        FROM EMPLOYEES E    
        GROUP BY E.JOB_ID
);

/40-) Write an SQL query to list the first name, last name, and hire date of the most recently 
      hired employee whose job title contains "Clerk"/

SELECT E.FIRST_NAME, E.LAST_NAME, E.HIRE_DATE, J.JOB_TITLE    
FROM EMPLOYEES E, JOBS J    
WHERE E.JOB_ID = J.JOB_ID    
AND E.HIRE_DATE = (    
        SELECT MAX(E.HIRE_DATE)    
        FROM EMPLOYEES E    
        WHERE E.JOB_ID = ANY (    
                SELECT J.JOB_ID    
                FROM JOBS J    
                WHERE J.JOB_TITLE LIKE '%Clerk%’    
        )
);

/41-) Write an SQL query to find which letter is used most frequently as the starting letter of employee first names/

SELECT SUBSTR(E.FIRST_NAME, 1, 1)  as MOST_FREQUENT_LETTER
FROM EMPLOYEES E  
GROUP BY SUBSTR(E.FIRST_NAME, 1, 1)  
HAVING COUNT(*) = (  
    SELECT MAX(COUNT(*))  
    FROM EMPLOYEES E  
    GROUP BY SUBSTR(E.FIRST_NAME, 1, 1)
);
                                        
/42-) Write an SQL query to list the name of the country with the fewest cities and the number of cities in that country/

SELECT C.COUNTRY_NAME, COUNT(C.COUNTRY_NAME)    
FROM COUNTRIES C, LOCATIONS L    
WHERE C.COUNTRY_ID = L.COUNTRY_ID    
GROUP BY C.COUNTRY_NAME    
HAVING COUNT(C.COUNTRY_NAME) = (    
        SELECT MIN(COUNT(*))    
        FROM LOCATIONS L    
        GROUP BY L.CITY
);

/43-) Write an SQL query to calculate the highest salary, lowest salary, total sum of salaries, 
      and the arithmetic average for all employees in the Employees table/

SELECT MAX(SALARY) AS "MAX",  
       MIN(SALARY) AS "MIN",  
       SUM(SALARY) AS "SUM",  
       (MAX(SALARY) + MIN(SALARY)) / 2 AS "MAX-MIN-AVG",  
       ROUND(AVG(SALARY), 1) AS "AVG"  
FROM EMPLOYEES;
        
/44-) Write an SQL query to find the lowest salary for each Job ID and calculate the average of these salaries/

SELECT ROUND(AVG(MIN(SALARY)), 2) AS "AVG_OF_MIN_SALARY"  
FROM EMPLOYEES  
GROUP BY JOB_ID;

/45-) Write an SQL query to list the highest salaries and the average salaries for each department/

SELECT E.DEPARTMENT_ID, D.DEPARTMENT_NAME,  
       ROUND(MAX(SALARY), 2) AS MAX_SALARY,  
       ROUND(AVG(SALARY), 2) AS AVERAGE_SALARY  
FROM EMPLOYEES E, DEPARTMENTS D  
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID  
GROUP BY E.DEPARTMENT_ID, D.DEPARTMENT_NAME;

/46-) Write an SQL query to list all departments that have a manager. Group the results by department, 
      and for those where the salary difference exceeds 5000, display the manager ID along with the minimum salary 
      in that department. Sort the results in descending order by salary/

SELECT MANAGER_ID, MIN(SALARY)    
FROM EMPLOYEES E    
WHERE MANAGER_ID IS NOT NULL    
GROUP BY MANAGER_ID    
HAVING MAX(SALARY) - MIN(SALARY) > 5000    
ORDER BY MIN(SALARY) DESC;
    
/47-) Write an SQL query to calculate the average salary of employees who do not work in the jobs with Job IDs 
      "MK_MAN", "MK_REP", and "ADD_AST". Group the results by Job ID, show only those averages greater than 10,000, 
      and sort the results in ascending order by salary/

SELECT JOB_ID, AVG(SALARY) AS AVERAGE_SALARY
FROM EMPLOYEES E
WHERE JOB_ID NOT IN ('MK_MAN', 'MK_REP', 'ADD_AST')
GROUP BY JOB_ID
HAVING AVG(SALARY) > 10000
ORDER BY AVG(SALARY) DESC;

/48-) Write an SQL query to find the number of unique departments in the Employees table/

SELECT COUNT(DISTINCT DEPARTMENT_ID) AS NUMBER_OF_UNIQUE_DEPARTMENTS  
FROM EMPLOYEES;

/49-) Write an SQL query to list the names of departments that have at least one employee and 
      whose average salary is above the overall average salary/

SELECT D.DEPARTMENT_NAME
FROM DEPARTMENTS D
WHERE D.DEPARTMENT_ID IN (
    SELECT E.DEPARTMENT_ID
    FROM EMPLOYEES E
    GROUP BY E.DEPARTMENT_ID
    HAVING AVG(E.SALARY) > (SELECT AVG(SALARY) FROM EMPLOYEES)
);

/49.Solution to the problem with join statement

SELECT D.DEPARTMENT_NAME
FROM DEPARTMENTS D
JOIN EMPLOYEES E ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME
HAVING AVG(E.SALARY) > (SELECT AVG(SALARY) FROM EMPLOYEES);

/50-) Write an SQL query to list, for each job title, the number of employees, total salary, and average salary. 
      Include only job titles that have more than 3 employees in the query results/

SELECT J.JOB_TITLE, 
       COUNT(*) AS NUMBER_OF_EMPLOYEES, 
       SUM(E.SALARY) AS TOTAL_SALARY, 
       ROUND(AVG(E.SALARY), 2) AS AVERAGE_SALARY
FROM EMPLOYEES E, JOBS J
WHERE E.JOB_ID = J.JOB_ID
GROUP BY J.JOB_TITLE
HAVING COUNT(*) > 3;

/50.Solution to the problem with join statement

SELECT J.JOB_TITLE, 
       COUNT(E.EMPLOYEE_ID) AS NUMBER_OF_EMPLOYEES, 
       SUM(E.SALARY) AS TOTAL_SALARY, 
       ROUND(AVG(E.SALARY), 2) AS AVERAGE_SALARY
FROM EMPLOYEES E
JOIN JOBS J ON E.JOB_ID = J.JOB_ID
GROUP BY J.JOB_TITLE
HAVING COUNT(E.EMPLOYEE_ID) > 3;
